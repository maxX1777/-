#ajax接口数据url格式如下
#https://buff.163.com/api/market/goods?game=csgo&page_num=1&category=weapon_knife_survival_bowie&_=1595496383847

#https://buff.163.com/api/market/goods?game=csgo&page_num=2&category=weapon_knife_survival_bowie&_=1595496383849

#https://buff.163.com/api/market/goods?game=csgo&page_num=3&category=weapon_knife_survival_bowie&_=1595496530921

#https://buff.163.com/api/market/goods?game=csgo&page_num=4&category=weapon_knife_survival_bowie&_=1595496530923

#https://buff.163.com/api/market/goods?game=csgo&page_num=1&category=weapon_knife_m9_bayonet&_=1595499718310
#去掉后面的数字不影响数据返回
#已实现一个武器的价格爬取，明天实现所有想爬的武器的自动爬取。将所有武器的关键词存在字典。然后拼接URL实现
to be done

import requests
import json
import time

class buff_csgo(object):
    def __init__(self):
        self.base_url = 'https://buff.163.com/api/market/goods?game=csgo&page_num=1&category=weapon_knife_m9_bayonet&sort_by=price.asc&_='
        self.headers = {
    'Accept' : "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
    'User-Agent' : "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.89 Safari/537.36"
}
        self.cookie = '_ntes_nnid=945c26fb3039d31e99ff9597102474b2,1579249719221; _ntes_nuid=945c26fb3039d31e99ff9597102474b2; mail_psc_fingerprint=e4bc670cddfbe347b317190361e8e608; nts_mail_user=yichenxuxyc@163.com:-1:1; Device-Id=dGhknPQrF1eZOQD8xTvE; _ga=GA1.2.1014128513.1595227554; _gid=GA1.2.1145760361.1595400256; Locale-Supported=zh-Hans; game=csgo; NTES_YD_SESS=RVOgW0XF2cQhtjhj0Yv6kq25BS50GkwRFaIEsf89mIfD490e4zw3CZC.lHVzJBR5YrtJRPvfFrLHRMGptTiCPy9FaEioqZZ0N_tCsSYL.g0G1RYcqT.pWTkBMKOxHXaMle8cHKn3dDKm2sXQ.Kf.7BZp4jFcIVsesX.otm1gVPBQ85lKRtHHHNW5HSWnzFwPqINt_16APqlNs1gvpOusL1qz2ndo9vQd_Py6Zk.aoHh1p; S_INFO=1595575520|0|3&80##|19975288075; P_INFO=19975288075|1595575520|1|netease_buff|00&99|null&null&null#zhj&330800#10#0|&0|null|19975288075; session=1-NhqPjeAvxgHv4T1cqyh-YeC6GmmVnRNQ2Fi_s29VRwFz2042870615; _gat_gtag_UA_109989484_1=1; csrf_token=ImM1Y2JiM2I5YzkyM2MxN2MyYzFkYTZjOWZjNzg3MTUzZmZiZGZlNTMi.EfwlVA.yqq9Zrqq0sML-Nc_QTfp4-Knj2A'
    def send_request(self,url):
        cookie_dict = {
        }
        cookie_list = self.cookie.split('; ')
        for cookie in cookie_list:
            cookie_dict[cookie.split('=')[0]] = cookie.split('=')[1]
        response = requests.get(url, headers = self.headers, timeout=10, cookies=cookie_dict)
        time.sleep(5) #避免爬的过于频繁被网站认定为爬虫
        result = json.loads(response.text) #每次获取respnse就转换为json格式
        return result

    def get_wanted(self, result):
        for item in result['data']['items']:
            content = item['name']
            price_buff = item['sell_min_price']
            print(content)
            print(price_buff)
    def get_url_list(self, result):
        page_num = result['data']['total_page']
        if page_num > 9:
            page_num = 9
        base_url = 'https://buff.163.com/api/market/goods?game=csgo&page_num={}&category=weapon_knife_m9_bayonet&sort_by=price.asc&_='
        url_list = []
        for i in range(1, 3):
            url = base_url.format(i)
            url_list.append(url)
        return url_list
    def run_spider(self):
        result = self.send_request(self.base_url)
        url_list = self.get_url_list(result)
        for url in url_list:
            print(url)
            response = self.send_request(url)
            self.get_wanted(response)

buff_csgo().run_spider()
